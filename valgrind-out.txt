==3739== Memcheck, a memory error detector
==3739== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3739== Using Valgrind-3.16.1-36d6727e1d-20200622X and LibVEX; rerun with -h for copyright info
==3739== Command: ./main
==3739== Parent PID: 3684
==3739== 
--3739-- 
--3739-- Valgrind options:
--3739--    --leak-check=full
--3739--    --show-leak-kinds=all
--3739--    --track-origins=yes
--3739--    --verbose
--3739--    --log-file=valgrind-out.txt
--3739-- Contents of /proc/version:
--3739--   Linux version 5.10.16.3-microsoft-standard-WSL2 (oe-user@oe-host) (x86_64-msft-linux-gcc (GCC) 9.3.0, GNU ld (GNU Binutils) 2.34.0.20200220) #1 SMP Fri Apr 2 22:23:49 UTC 2021
--3739-- 
--3739-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3-avx-avx2-bmi-f16c-rdrand
--3739-- Page sizes: currently 4096, max supported 4096
--3739-- Valgrind library directory: /usr/lib/x86_64-linux-gnu/valgrind
--3739-- Reading syms from /mnt/c/Users/Pietro Ammaturo/github/WordChecker/main
--3739-- Reading syms from /lib/x86_64-linux-gnu/ld-2.31.so
--3739--   Considering /usr/lib/debug/.build-id/32/438eb3b034da54caf58c7a65446639f7cfe274.debug ..
--3739--   .. build-id is valid
--3739-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux
--3739--   Considering /usr/lib/debug/.build-id/54/299c4aec0e5e5f3d7b8135341351d0e1dbfc64.debug ..
--3739--   .. build-id is valid
--3739--    object doesn't have a dynamic symbol table
--3739-- Scheduler: using generic scheduler lock implementation.
--3739-- Reading suppressions file: /usr/lib/x86_64-linux-gnu/valgrind/default.supp
==3739== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-3739-by-pietro-on-???
==3739== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-3739-by-pietro-on-???
==3739== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-3739-by-pietro-on-???
==3739== 
==3739== TO CONTROL THIS PROCESS USING vgdb (which you probably
==3739== don't want to do, unless you know exactly what you're doing,
==3739== or are doing some strange experiment):
==3739==   /usr/bin/vgdb --pid=3739 ...command...
==3739== 
==3739== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==3739==   /path/to/gdb ./main
==3739== and then give GDB the following command
==3739==   target remote | /usr/bin/vgdb --pid=3739
==3739== --pid is optional if only one valgrind process is running
==3739== 
--3739-- REDIR: 0x401f970 (ld-linux-x86-64.so.2:strlen) redirected to 0x580ca5f2 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--3739-- REDIR: 0x401f750 (ld-linux-x86-64.so.2:index) redirected to 0x580ca60c (vgPlain_amd64_linux_REDIR_FOR_index)
--3739-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_core-amd64-linux.so
--3739--   Considering /usr/lib/debug/.build-id/f2/7641e081d3c37b410d7f31da4e2bf21040f356.debug ..
--3739--   .. build-id is valid
--3739-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so
--3739--   Considering /usr/lib/debug/.build-id/25/7cdcdf80e04f91ca9e3b185ee3b52995e89946.debug ..
--3739--   .. build-id is valid
==3739== WARNING: new redirection conflicts with existing -- ignoring it
--3739--     old: 0x0401f970 (strlen              ) R-> (0000.0) 0x580ca5f2 vgPlain_amd64_linux_REDIR_FOR_strlen
--3739--     new: 0x0401f970 (strlen              ) R-> (2007.0) 0x0483bda0 strlen
--3739-- REDIR: 0x401c190 (ld-linux-x86-64.so.2:strcmp) redirected to 0x483cc90 (strcmp)
--3739-- REDIR: 0x401feb0 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4840740 (mempcpy)
--3739-- Reading syms from /lib/x86_64-linux-gnu/libc-2.31.so
--3739--   Considering /usr/lib/debug/.build-id/2e/5abcee94f3bcbed7bba094f341070a2585a2ba.debug ..
--3739--   .. build-id is valid
--3739-- REDIR: 0x48e1ea0 (libc.so.6:memmove) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48e1250 (libc.so.6:strncpy) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48e21c0 (libc.so.6:strcasecmp) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48e0b70 (libc.so.6:strcat) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48e12b0 (libc.so.6:rindex) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48e3550 (libc.so.6:rawmemchr) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48fb710 (libc.so.6:wmemchr) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48fb2b0 (libc.so.6:wcscmp) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48e2000 (libc.so.6:mempcpy) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48e1e30 (libc.so.6:bcmp) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48e11f0 (libc.so.6:strncmp) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48e0c20 (libc.so.6:strcmp) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48e1f60 (libc.so.6:memset) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48fb270 (libc.so.6:wcschr) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48e1150 (libc.so.6:strnlen) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48e0cf0 (libc.so.6:strcspn) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48e2210 (libc.so.6:strncasecmp) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48e0c90 (libc.so.6:strcpy) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48e2360 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48fc910 (libc.so.6:wcsnlen) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48fb2f0 (libc.so.6:wcscpy) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48e12f0 (libc.so.6:strpbrk) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48e0bd0 (libc.so.6:index) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48e1110 (libc.so.6:strlen) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48e78b0 (libc.so.6:memrchr) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48e2260 (libc.so.6:strcasecmp_l) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48e1df0 (libc.so.6:memchr) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48fb390 (libc.so.6:wcslen) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48e1590 (libc.so.6:strspn) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48e2160 (libc.so.6:stpncpy) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48e2100 (libc.so.6:stpcpy) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48e3590 (libc.so.6:strchrnul) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x48e22b0 (libc.so.6:strncasecmp_l) redirected to 0x482e1b0 (_vgnU_ifunc_wrapper)
--3739-- REDIR: 0x49b2990 (libc.so.6:__strrchr_avx2) redirected to 0x483b7b0 (rindex)
--3739-- REDIR: 0x48dd0f0 (libc.so.6:malloc) redirected to 0x4838710 (malloc)
==3739== Invalid read of size 2
==3739==    at 0x109961: addNode (main.c:252)
==3739==    by 0x109105: main (main.c:854)
==3739==  Address 0xe is not stack'd, malloc'd or (recently) free'd
==3739== 
==3739== 
==3739== Process terminating with default action of signal 11 (SIGSEGV)
==3739==  Access not within mapped region at address 0xE
==3739==    at 0x109961: addNode (main.c:252)
==3739==    by 0x109105: main (main.c:854)
==3739==  If you believe this happened as a result of a stack
==3739==  overflow in your program's main thread (unlikely but
==3739==  possible), you can try to increase the size of the
==3739==  main thread stack using the --main-stacksize= flag.
==3739==  The main thread stack size used in this run was 8388608.
--3739-- REDIR: 0x48dd720 (libc.so.6:free) redirected to 0x4839940 (free)
==3739== 
==3739== HEAP SUMMARY:
==3739==     in use at exit: 32 bytes in 1 blocks
==3739==   total heap usage: 2 allocs, 1 frees, 1,056 bytes allocated
==3739== 
==3739== Searching for pointers to 1 not-freed blocks
==3739== Checked 73,640 bytes
==3739== 
==3739== 32 bytes in 1 blocks are definitely lost in loss record 1 of 1
==3739==    at 0x483877F: malloc (vg_replace_malloc.c:307)
==3739==    by 0x10994B: addNode (main.c:249)
==3739==    by 0x109105: main (main.c:854)
==3739== 
==3739== LEAK SUMMARY:
==3739==    definitely lost: 32 bytes in 1 blocks
==3739==    indirectly lost: 0 bytes in 0 blocks
==3739==      possibly lost: 0 bytes in 0 blocks
==3739==    still reachable: 0 bytes in 0 blocks
==3739==         suppressed: 0 bytes in 0 blocks
==3739== 
==3739== ERROR SUMMARY: 4 errors from 2 contexts (suppressed: 0 from 0)
==3739== 
==3739== 3 errors in context 1 of 2:
==3739== Invalid read of size 2
==3739==    at 0x109961: addNode (main.c:252)
==3739==    by 0x109105: main (main.c:854)
==3739==  Address 0xe is not stack'd, malloc'd or (recently) free'd
==3739== 
==3739== ERROR SUMMARY: 4 errors from 2 contexts (suppressed: 0 from 0)
